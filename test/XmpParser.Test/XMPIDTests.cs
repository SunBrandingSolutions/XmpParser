using System;
using Xunit;

namespace XmpParser.Test
{
    public class XmpIDTests
    {
        [Fact]
        public void XmpID_ConstructorGuidNotNull()
        {
            XmpID target = new XmpID();
            Assert.Equal(Guid.Empty, target.Guid);
        }

        [Fact]
        public void XmpID_ToStringTest()
        {
            string expected;
            string actual;
            XmpID target;

            expected = "xmp.did:bc07cbcd-9eb4-405f-8c8f-20666219e6ca";
            target = new XmpID(expected);
            actual = target.ToString();

            Assert.Equal(expected, actual);
        }

        [Fact]
        public void XmpID_GetGuidTest()
        {
            // taken from XMP generated by Adobe Illustrator CC
            string[] tests =
            {
                "xmp.did:bc07cbcd-9eb4-405f-8c8f-20666219e6ca",
                "uuid:a654c596-4bb7-6f49-910f-6930a6857e3b",
                "uuid:5D20892493BFDB11914A8590D31508C8"
            };

            Guid[] guids = 
            {
                new Guid("bc07cbcd-9eb4-405f-8c8f-20666219e6ca"),
                new Guid("a654c596-4bb7-6f49-910f-6930a6857e3b"),
                new Guid("5d208924-93bf-db11-914a-8590d31508c8")
            };

            for (int i = 0; i < tests.Length; i++)
            {
                XmpID target = new XmpID(tests[i]);

                Guid expected = guids[i];
                Guid actual = target.Guid;

                Assert.Equal(expected, actual);
            }
        }

        [Fact]
        public void XmpID_ImplicitFromString()
        {
            string guid = "xmp.did:bc07cbcd-9eb4-405f-8c8f-20666219e6ca";
            XmpID xmpId = guid;

            Assert.Equal(guid, xmpId.ToString());
        }
    }
}
